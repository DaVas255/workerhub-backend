generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum EnumTaskStatus {
  open
  accepted
  completed
}

enum Role {
  USER
  PREMIUM
  MANAGER
  ADMIN
}

model Task {
  id      Int            @id @default(autoincrement())
  title   String
  content String
  status  EnumTaskStatus @default(open)
  price   Int
  date    DateTime

  city   City @relation(fields: [cityId], references: [id])
  cityId Int  @map("city_id")

  specialty   Speciality @relation(fields: [specialtyId], references: [id])
  specialtyId Int

  customer   User? @relation("createdTasks", fields: [customerId], references: [id])
  customerId Int?

  executor   User? @relation("pinnedTasks", fields: [executorId], references: [id])
  executorId Int?
}

model User {
  id                Int     @id @default(autoincrement())
  name              String?
  email             String  @unique
  password          String
  phoneNumber       String? @unique
  verificationToken String? @default(cuid()) @map("verification_token")
  rights            Role[]  @default([USER])
  avatarPath        String?

  city   City? @relation(fields: [cityId], references: [id])
  cityId Int?

  speciality UserSpeciality[]

  // review Review[]

  createdTasks Task[] @relation("createdTasks")
  pinnedTasks  Task[] @relation("pinnedTasks")
}

model Speciality {
  id   Int    @id @default(autoincrement())
  name String
  task Task[]

  user UserSpeciality[]
}

model UserSpeciality {
  user         User       @relation(fields: [userId], references: [id])
  userId       Int
  speciality   Speciality @relation(fields: [specialityId], references: [id])
  specialityId Int

  @@id([userId, specialityId])
}

model City {
  id   Int    @id @default(autoincrement())
  name String
  task Task[]
  user User[]
}

// model Review {
//   id     Int      @id @default(autoincrement())
//   Date   DateTime
//   text   String
//   rating Int
//   user   User     @relation(fields: [userId], references: [id])
//   userId Int
// }
